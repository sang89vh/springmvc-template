<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


    <!-- Enable AspectJ style of Spring AOP -->
    <aop:aspectj-autoproxy/>

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>
    <context:annotation-config/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <context:component-scan base-package="com.faq.mbackend"/>
    <context:property-placeholder location="classpath:dub_local.properties,classpath:mbackend.properties"/>
    <!--<context:property-placeholder location="classpath:dub.properties,classpath:mbackend.properties"/>-->


    <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter"
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean>

    <beans:bean id="stringHttpMessageConverter"
                class="org.springframework.http.converter.StringHttpMessageConverter"/>
    <beans:bean id="jsonHttpMessageConverter"
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>


    <beans:bean id="annotationMethodHandlerExceptionResolver"
                class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <beans:property name="order" value="0"/>
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="stringHttpMessageConverter"/>
                <beans:ref bean="jsonHttpMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <beans:property name="maxUploadSize">
            <beans:value>50000000</beans:value>
        </beans:property>
        <beans:property name="maxInMemorySize">
            <beans:value>10000000</beans:value>
        </beans:property>
    </beans:bean>

    <!-- Configure Aspect Beans, without this Aspects advices wont execute -->
    <beans:bean id="controllerAspect" name="ControllerAspect" class="com.faq.mbackend.aspect.ControllerAspect">
    </beans:bean>


</beans:beans>
